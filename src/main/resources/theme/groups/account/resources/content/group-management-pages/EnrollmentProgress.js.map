{"version":3,"sources":["../../../src/app/content/group-management-pages/EnrollmentProgress.tsx"],"names":["React","GroupsServiceClient","DataList","DataListItem","DataListItemRow","DataListItemCells","DataListCell","Label","EnrollmentProgress","Component","constructor","props","state","data","fetchData","componentDidMount","groupsService","doGet","then","resp","ok","setState","catch","err","console","log","toDate","timestamp","dateTimeFormat","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","render","map","d","group","name","enrollmentStates","es","justification"],"mappings":";;AACA,OAAO,KAAKA,KAAZ;AAEA,SAASC,mBAAT;AAEA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,eAAjC,EAAkDC,iBAAlD,EAAqEC,YAArE,EAA4FC,KAA5F;AAeA,OAAO,MAAMC,kBAAN,SAAiCR,KAAK,CAACS,SAAvC,CAA+D;AAKlEC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;;AADsB,2CAHV,IAAIV,mBAAJ,EAGU;;AAEtB,SAAKW,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGA,SAAKC,SAAL;AACH;;AAEMC,EAAAA,iBAAiB,GAAS,CAEhC;;AAEOD,EAAAA,SAAS,GAAE;AACjB,SAAKE,aAAL,CAAoBC,KAApB,CAA0B,6BAA1B,EACGC,IADH,CACSC,IAAD,IAAe;AACnB,UAAGA,IAAI,CAACC,EAAR,EACE,KAAKC,QAAL,CAAc;AAACR,QAAAA,IAAI,EAAEM,IAAI,CAACN;AAAZ,OAAd;AACH,KAJH,EAIKS,KAJL,CAIYC,GAAD,IAAc;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KANH;AAOD;;AAGOG,EAAAA,MAAM,CAACC,SAAD,EAAmB;AAC/B,QAAIC,cAAc,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,KAAK,EAAE,MAA1B;AAAkCC,MAAAA,GAAG,EAAE,SAAvC;AAAkDC,MAAAA,IAAI,EAAE,SAAxD;AAAmEC,MAAAA,MAAM,EAAE,SAA3E;AAAsFC,MAAAA,MAAM,EAAE;AAA9F,KAAjC,CAArB;AACA,WAAOR,cAAc,CAACS,MAAf,CAAsBV,SAAtB,CAAP;AACD;;AAEMW,EAAAA,MAAM,GAAoB;AAE/B,wBACE,uDACE,oBAAC,QAAD;AAAU,oBAAW,0BAArB;AAAgD,MAAA,SAAS;AAAzD,OAEE,KAAK1B,KAAL,CAAWC,IAAX,CAAgB0B,GAAhB,CAAsBC,CAAD,iBACnB,oBAAC,YAAD,qBACE,oBAAC,eAAD,qBACE,oBAAC,iBAAD;AACE,MAAA,aAAa,EAAE,cACb,oBAAC,YAAD,qBACE,kCAAOA,CAAC,CAACC,KAAF,CAAQC,IAAf,CADF,CADa,eAIb,oBAAC,YAAD,qBACE,oBAAC,QAAD;AAAU,sBAAW,UAArB;AAAgC,QAAA,SAAS;AAAzC,SAEEF,CAAC,CAACG,gBAAF,CAAmBJ,GAAnB,CAAwBK,EAAD,iBACvB,oBAAC,YAAD,qBACE,oBAAC,eAAD,qBACE,oBAAC,iBAAD;AACE,QAAA,aAAa,EAAE,cACb,oBAAC,YAAD,qBACE,oBAAC,KAAD,QAAQA,EAAE,CAAChC,KAAX,CADF,CADa,eAIb,oBAAC,YAAD,qBACE,kCAAO,KAAKc,MAAL,CAAYkB,EAAE,CAACjB,SAAf,CAAP,CADF,CAJa,eAOb,oBAAC,YAAD,qBACE,kCAAOiB,EAAE,CAACC,aAAV,CADF,CAPa;AADjB,QADF,CADF,CADA,CAFF,CADF,CAJa;AADjB,MADF,CADF,CADF,CAFF,CADF,CADF;AAiDN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEK;;AAvHiE;AAwHrE","sourcesContent":["\r\nimport * as React from 'react';\r\n\r\nimport { GroupsServiceClient } from '../../groups-mngnt-service/groups.service';\r\n\r\nimport { DataList, DataListItem, DataListItemRow, DataListItemCells, DataListCell, Divider, Label } from '@patternfly/react-core';\r\n\r\n\r\n\r\ninterface State {\r\n  data: any\r\n}\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\n\r\n\r\nexport class EnrollmentProgress extends React.Component<Props, State> {\r\n\r\n    groupsService = new GroupsServiceClient();\r\n\r\n\r\n    constructor(props : Props){\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        };\r\n        this.fetchData();\r\n    }\r\n\r\n    public componentDidMount(): void {\r\n\r\n    }\r\n\r\n    private fetchData(){\r\n      this.groupsService!.doGet(\"/groups/user/enroll/request\")\r\n        .then((resp: any) => {\r\n          if(resp.ok)\r\n            this.setState({data: resp.data});\r\n        }).catch((err: any) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    \r\n\r\n    private toDate(timestamp: number){\r\n      let dateTimeFormat = new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'long', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' });\r\n      return dateTimeFormat.format(timestamp);\r\n    }\r\n\r\n    public render(): React.ReactNode {\r\n\r\n      return (\r\n        <>\r\n          <DataList aria-label=\"Simple data list example\" isCompact>\r\n          {\r\n            this.state.data.map( (d: any) => (\r\n              <DataListItem>\r\n                <DataListItemRow>\r\n                  <DataListItemCells\r\n                    dataListCells={[\r\n                      <DataListCell>\r\n                        <span>{d.group.name}</span>\r\n                      </DataListCell>,\r\n                      <DataListCell>\r\n                        <DataList aria-label=\"internal\" isCompact>\r\n                        {\r\n                          d.enrollmentStates.map((es: any) => (\r\n                          <DataListItem>\r\n                            <DataListItemRow>\r\n                              <DataListItemCells\r\n                                dataListCells={[\r\n                                  <DataListCell>\r\n                                    <Label>{es.state}</Label>\r\n                                  </DataListCell>,\r\n                                  <DataListCell>\r\n                                    <span>{this.toDate(es.timestamp)}</span>\r\n                                  </DataListCell>,\r\n                                  <DataListCell>\r\n                                    <span>{es.justification}</span>\r\n                                  </DataListCell>\r\n                                ]}\r\n                              />\r\n                            </DataListItemRow>\r\n                          </DataListItem>\r\n                          ))\r\n                        }\r\n                        </DataList>\r\n                      </DataListCell>\r\n                    ]}\r\n                  />\r\n                </DataListItemRow>\r\n              </DataListItem>\r\n\r\n            ))\r\n          }\r\n          </DataList>\r\n        </>\r\n\r\n      );\r\n\r\n/*\r\n        return (\r\n            <>\r\n              <DataList aria-label=\"Simple data list example\" isCompact>\r\n                <DataListItem aria-labelledby=\"compact-item1\">\r\n                  <DataListItemRow>\r\n                    <DataListItemCells\r\n                      dataListCells={[\r\n                        <DataListCell key=\"primary content\">\r\n                          <span id=\"simple-item1\">Primary content</span>\r\n                        </DataListCell>,\r\n                        <DataListCell key=\"secondary content\">Secondary content</DataListCell>\r\n                      ]}\r\n                    />\r\n                  </DataListItemRow>\r\n                </DataListItem>\r\n                <DataListItem aria-labelledby=\"compact-item2\">\r\n                  <DataListItemRow>\r\n                    <DataListItemCells\r\n                      dataListCells={[\r\n                        <DataListCell isFilled={false} key=\"secondary content fill\">\r\n                          <span id=\"simple-item2\">Secondary content (pf-m-no-fill)</span>\r\n                        </DataListCell>,\r\n                        <DataListCell isFilled={false} alignRight key=\"secondary content align\">\r\n                          Secondary content (pf-m-align-right pf-m-no-fill)\r\n                        </DataListCell>\r\n                      ]}\r\n                    />\r\n                  </DataListItemRow>\r\n                </DataListItem>\r\n              </DataList>\r\n            </>\r\n        );\r\n*/\r\n\r\n    }\r\n};\r\n"],"file":"EnrollmentProgress.js"}