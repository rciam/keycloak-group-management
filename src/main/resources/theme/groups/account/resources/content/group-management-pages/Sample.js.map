{"version":3,"sources":["../../../src/app/content/group-management-pages/Sample.tsx"],"names":["React","KeycloakService","Banner","CustomTableComposable","AccordionSample","keycloakService","keycloak","Sample","Component","constructor","props","state","accessToken","s","componentDidMount","isReactLoading","console","log","testServices","getToken","then","token","setState","catch","err","render"],"mappings":"AACA,OAAO,KAAKA,KAAZ,yD,CAEA;;AACA,SAAyBC,eAAzB,qD,CACA;;AAGA,SASIC,MATJ;AAYA,SAASC,qBAAT;AAEA,SAASC,eAAT;AAKA,MAAMC,eAAe,GAAG,IAAIJ,eAAJ,CAAoBK,QAApB,CAAxB;AAeA,OAAO,MAAMC,MAAN,SAAqBP,KAAK,CAACQ,SAA3B,CAAmD;AAEtDC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,IADJ;AAETC,MAAAA,CAAC,EAAE;AAFM,KAAb;AAIH;;AAEMC,EAAAA,iBAAiB,GAAS;AAC7BC,IAAAA,cAAc,GAAG,KAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,SAAKC,YAAL;AACH;;AAGOA,EAAAA,YAAY,GAAE;AAElB;AACAb,IAAAA,eAAe,CAACc,QAAhB,GACKC,IADL,CACYC,KAAD,IAAgB;AACnBL,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BI,KAA7B;AACA,WAAKC,QAAL,CAAc;AAACV,QAAAA,WAAW,EAAES;AAAd,OAAd;AACH,KAJL,EAKKE,KALL,CAKYC,GAAD,IAAc;AACjBR,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBO,GAAvB;AACH,KAPL;AASH;;AAGMC,EAAAA,MAAM,GAAoB;AAC7BT,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACA,wBACI,uDACA,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC;AAAhB,oCADA,eAKA,oBAAC,qBAAD,OALA,eAMA,oBAAC,eAAD,OANA,CADJ;AAWH;;AA7CqD;AA8CzD","sourcesContent":["\r\nimport * as React from 'react';\r\n\r\n// @ts-ignore\r\nimport { KeycloakClient, KeycloakService } from '../../keycloak-service/keycloak.service';\r\n// @ts-ignore\r\nimport { KeycloakContext } from '../../keycloak-service/KeycloakContext';\r\n\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    EmptyState,\r\n    EmptyStateBody,\r\n    EmptyStateVariant,\r\n    Grid,\r\n    GridItem,\r\n    Title,\r\n    Banner\r\n} from '@patternfly/react-core';\r\n\r\nimport { CustomTableComposable } from '../../group-widgets/CustomTableComposable';\r\n\r\nimport { AccordionSample } from '../../group-widgets/AccordionSample';\r\n\r\ndeclare const resourceUrl: string;\r\n\r\ndeclare const keycloak: KeycloakClient;\r\nconst keycloakService = new KeycloakService(keycloak);\r\n\r\ndeclare let isReactLoading: boolean;\r\n\r\ninterface State {\r\n  accessToken: any,\r\n  s: any\r\n}\r\n\r\n\r\ninterface Props {\r\n  value: string,\r\n  children: React.ReactNode\r\n}\r\n\r\nexport class Sample extends React.Component<Props, State> {\r\n\r\n    constructor(props : Props){\r\n        super(props);\r\n        this.state = {\r\n            accessToken: null,\r\n            s: null\r\n        };\r\n    }\r\n\r\n    public componentDidMount(): void {\r\n        isReactLoading = false;\r\n        console.log(\"componentDidMount\");\r\n        this.testServices();\r\n    }\r\n\r\n\r\n    private testServices(){\r\n\r\n        //get token\r\n        keycloakService.getToken()\r\n            .then( (token: any) => {\r\n                console.log(\"AccessToken: \", token);\r\n                this.setState({accessToken: token });\r\n            })\r\n            .catch((err: any) => {\r\n                console.log(\"Error: \", err);\r\n            });\r\n\r\n    }\r\n\r\n\r\n    public render(): React.ReactNode {\r\n        console.log(\"rendering GroupsManagementPage\");\r\n        return (\r\n            <>\r\n            <Banner variant=\"info\">\r\n                  There are pending requests\r\n            </Banner>\r\n\r\n            <CustomTableComposable></CustomTableComposable>\r\n            <AccordionSample></AccordionSample>\r\n\r\n            </>\r\n        );\r\n    }\r\n};\r\n"],"file":"Sample.js"}