{"version":3,"sources":["../src/app/ContentPages.tsx"],"names":["React","Route","Switch","matchPath","NavItem","NavExpandable","Msg","PageNotFound","ForbiddenPage","GroupPage","AdminGroupPage","InvitationLandingPage","customPages","path","expandId","parentId","componentName","isModulePageDef","item","modulePath","undefined","isExpansion","contentItem","content","groupId","group","itemId","isChildOf","parent","child","createNavItems","activePage","contentParam","groupNum","current_path","window","location","hash","substring","customPage","forEach","page","exact","strict","label","links","map","navLinkId","id","localize","labelParams","makeNavItems","setIds","expansionGroupNum","i","length","console","log","initGroupAndItemIds","flattenContent","pageDefs","flat","push","makeRoutes","customComponents","routes","node","createElement","module","pageDef","component","index"],"mappings":"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","sourcesContent":["/*\r\n * Copyright 2019 Red Hat, Inc. and/or its affiliates.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport * as React from 'react';\r\nimport {Route, Switch,matchPath} from 'react-router-dom';\r\nimport {NavItem, NavExpandable} from '@patternfly/react-core';\r\n// @ts-ignore\r\nimport {Msg} from './widgets/Msg';\r\n// @ts-ignore\r\nimport {PageNotFound} from './content/page-not-found/PageNotFound';\r\n// @ts-ignore\r\nimport { ForbiddenPage } from './content/forbidden-page/ForbiddenPage';\r\nimport {GroupPage} from './content/group-management-pages/GroupPage';\r\nimport {AdminGroupPage} from './content/group-management-pages/AdminGroupPage';\r\nimport { InvitationLandingPage } from './content/group-management-pages/InvitationLandingPage';\r\n\r\nexport interface ContentItem {\r\n    id?: string;\r\n    label: string;\r\n    labelParams?: string[];\r\n    hidden?: string;\r\n    groupId: string; // computed value\r\n    itemId: string; // computed value\r\n};\r\n\r\nlet customPages =[ \r\n    {\r\n        path: \"/groups/showgroups/:id\",\r\n        expandId: \"groups\",\r\n        parentId: \"showgroups\",\r\n        componentName: \"GroupPage\"\r\n    },\r\n    {\r\n        path: \"/groups/admingroups/:id\",\r\n        expandId: \"groups\",\r\n        parentId: \"admingroups\",\r\n        componentName: \"AdminGroupPage\"\r\n    }\r\n]\r\n\r\nexport interface Expansion extends ContentItem {\r\n    content: ContentItem[];\r\n}\r\n\r\nexport interface PageDef extends ContentItem {\r\n    path: string;\r\n}\r\n\r\nexport interface ComponentPageDef extends PageDef {\r\n    component: React.ComponentType;\r\n}\r\n\r\nexport interface ModulePageDef extends PageDef {\r\n    modulePath: string;\r\n    componentName: string;\r\n    module: React.Component; // computed value\r\n}\r\n\r\nexport function isModulePageDef(item: ContentItem): item is ModulePageDef {\r\n    return (item as ModulePageDef).modulePath !== undefined;\r\n}\r\n\r\nexport function isExpansion(contentItem: ContentItem): contentItem is Expansion {\r\n    return (contentItem as Expansion).content !== undefined;\r\n}\r\n\r\ndeclare const content: ContentItem[];\r\n\r\nfunction groupId(group: number): string {\r\n    return 'grp-' + group;\r\n}\r\n\r\nfunction itemId(group: number, item: number): string {\r\n    return 'grp-' + group + '_itm-' + item;\r\n}\r\n\r\nfunction isChildOf(parent: Expansion, child: PageDef): boolean {\r\n    for (var item of parent.content) {\r\n        if (isExpansion(item) && isChildOf(item, child)) return true;\r\n        if (parent.groupId === child.groupId) return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction createNavItems(activePage: PageDef, contentParam: ContentItem[], groupNum: number): React.ReactNode {\r\n    if (typeof content === 'undefined') return (<React.Fragment/>);\r\n        let current_path = window.location.hash.substring(1);\r\n        let customPage = {\r\n            path:\"\",\r\n            parentId:\"\",\r\n            expandId:\"\",\r\n            componentName:\"\"\r\n        }\r\n        customPages.forEach(page=>{\r\n            matchPath(current_path, {\r\n                path: page.path,\r\n                exact: true,\r\n                strict: false\r\n              })&&(customPage=page)&&(activePage={path:\"\",label:\"\",groupId:\"\",itemId:\"\"});\r\n        })\r\n\r\n        const links: React.ReactElement[] = contentParam.map((item: ContentItem) => {\r\n            const navLinkId = `nav-link-${item.id}`;\r\n            if (isExpansion(item)) {\r\n                return <NavExpandable id={navLinkId}\r\n                                        groupId={item.groupId}\r\n                                        key={item.groupId}\r\n                                        title={Msg.localize(item.label, item.labelParams)}\r\n                                        isExpanded={isChildOf(item, activePage)||customPage.expandId===item.id}\r\n                                        >\r\n                            {createNavItems(activePage, item.content, groupNum + 1)}\r\n                        </NavExpandable>\r\n            } else {\r\n                const page: PageDef = item as PageDef;\r\n                return <NavItem id={navLinkId}\r\n                                groupId={item.groupId}\r\n                                itemId={item.itemId}\r\n                                key={item.itemId}\r\n                                to={'#/' + page.path}\r\n                                isActive={activePage.itemId === item.itemId||customPage.parentId===item.id}\r\n                                type=\"button\">\r\n                            {Msg.localize(page.label, page.labelParams)}\r\n                        </NavItem>\r\n            }\r\n    });\r\n\r\n    return (<React.Fragment>{links}</React.Fragment>);\r\n}\r\n\r\nexport function makeNavItems(activePage: PageDef): React.ReactNode {\r\n    return createNavItems(activePage, content, 0);\r\n}\r\n\r\nfunction setIds(contentParam: ContentItem[], groupNum: number): number {\r\n    if (typeof contentParam === 'undefined') return groupNum;\r\n    let expansionGroupNum = groupNum;\r\n\r\n    for (let i = 0; i < contentParam.length; i++) {\r\n        const item: ContentItem = contentParam[i];\r\n        if (isExpansion(item)) {\r\n            item.itemId = itemId(groupNum, i);\r\n            expansionGroupNum = expansionGroupNum + 1;\r\n            item.groupId = groupId(expansionGroupNum);\r\n            expansionGroupNum = setIds(item.content, expansionGroupNum);\r\n            console.log('currentGroup=' + (expansionGroupNum));\r\n        } else {\r\n            item.groupId = groupId(groupNum);\r\n            item.itemId = itemId(groupNum, i);\r\n        }\r\n    };\r\n\r\n    return expansionGroupNum;\r\n}\r\n\r\nexport function initGroupAndItemIds(): void {\r\n    setIds(content, 0);\r\n}\r\n\r\n// get rid of Expansions and put all PageDef items into a single array\r\nexport function flattenContent(pageDefs: ContentItem[]): PageDef[] {\r\n    const flat: PageDef[] = [];\r\n\r\n    for (let item of pageDefs) {\r\n        if (isExpansion(item)) {\r\n            flat.push(...flattenContent(item.content));\r\n        } else {\r\n            flat.push(item as PageDef);\r\n        }\r\n    }\r\n\r\n    return flat;\r\n}\r\n\r\nexport function makeRoutes(): React.ReactNode {\r\n    if (typeof content === 'undefined') return (<span/>);\r\n    const customComponents = {\r\n        GroupPage:GroupPage,\r\n        AdminGroupPage:AdminGroupPage\r\n    }\r\n    const pageDefs: PageDef[] = flattenContent(content);\r\n\r\n    const routes: React.ReactElement<Route>[] = pageDefs.map((page: PageDef) => {\r\n        if (isModulePageDef(page)) {\r\n            const node: React.ReactNode = React.createElement(page.module[page.componentName], {'pageDef': page});\r\n            return <Route key={page.itemId} path={'/' + page.path} exact render={() => node} />;\r\n        } else {\r\n            const pageDef: ComponentPageDef = page as ComponentPageDef;\r\n            return <Route key={page.itemId} path={'/' + page.path} exact component={pageDef.component}/>;\r\n        }\r\n    });\r\n\r\n    return (<Switch>\r\n                {routes}\r\n                {customPages.map((item,index)=>{\r\n                    return <Route path={item.path} component={customComponents[item.componentName]}/>\r\n                })}\r\n                <Route path=\"/invitation/:invitation_id\" component={InvitationLandingPage}/>\r\n                <Route path=\"/forbidden\" component={ForbiddenPage}/>\r\n                <Route component={PageNotFound}/>\r\n            </Switch>);\r\n}\r\n"],"file":"ContentPages.js"}